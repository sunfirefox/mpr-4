/*
    main.bit -- Main Bit File for the Multithreaded Portable Runtime (MPR)
 */

Bit.load({
    blend: [
        '${BITS}/embedthis.bit',
        "src/deps/est/est.bit",
        'test/test.bit',
        'doc/doc.bit',
    ],

    customize: [
        /* Optionally load this if present. Feel free to create and customize */
        'custom.bit',
    ],

    settings: {
        product: 'mpr',
        title: 'Multithreaded Portable Runtime',
        company: 'Embedthis',
        version: '4.3.0',
        buildNumber: '0',
        sync: ['bitos', 'est'],
        '+required': [], 
        '+discover': [ 'doxygen', 'dsi', 'ejs', 'est', 'man', 'man2html', 'md5', 'utest' ],
        'without-all': ['doxygen', 'dsi', 'est', 'man', 'man2html', 'pmaker'],
        'without-default': ['doxygen', 'dsi', 'man', 'man2html', 'pmaker'],
        mpr: {
            logging: true,          /* Enable logging of mprLog calls */
            manager: 'manager',     /* Enable watch-dog manager */
            tracing: true,          /* Enable logging of mprTrace and assert() */
        },
    },

    usage: {
        assert: 'Enable program assertions',
        static: 'Build with static linking (true|false)',                                                  
    },

    targets: {
        libmpr: {
            type: 'lib',
            headers: [ 'src/*.h' ],
            sources: [ 'src/*.c' ],
            exclude: [ /manager.c/ ],
        },

        libmprssl: {
            type: 'lib',
            depends: [ 'libmpr', 'est', 'openssl', 'matrixssl', 'mocana' ],
            sources: [ 'src/ssl/*.c' ],
        },

        manager: {
            enable: 'bit.settings.mpr.manager',
            type: 'exe',
            rule: 'gui',
            depends: [ 'libmpr' ],
            sources: [ 'src/manager.c' ],
        },

        makerom: {
            enable: 'bit.settings.rom',
            type: 'exe',
            depends: [ 'libmpr', ],
            sources: ['src/utils/makerom.c'],
            platforms: [ 'local' ],
        },

        chargen: {
            type: 'exe',
            depends: [ 'libmpr', ],
            sources: [ 'src/utils/charGen.c' ],
            platforms: [ 'local' ],
        },

        package: {
            depends: ['packageCombo'],
        },

        packageSource: { },

        packageCombo: {
            depends: ['build'],
            action: "
                /* This is a combo/flat distribution only */
                let d = bit.dir.pkg.join('${settings.product}-${settings.version}')
                safeRemove(bit.dir.pkg)
                install('package/mpr.bit', d.join('src/deps/mpr/mpr.bit'), {hidden: true})
                install(['src/utils/makerom.c', 'src/manager.c'], d.join('src/deps/mpr'))
                install(['doc/api/mprBare.html', 'doc/api/mpr*.tags', 'doc/api/mpr.dtags'], d.join('doc/api'))
                install('doc/man/*.1', d.join('doc/man'))
                install('src/mpr.h', d.join('src/deps/mpr/mpr.h'))
                install(['src/mem.c', 'src/mpr.c', 'src/*.c'], d.join('src/deps/mpr/mprLib.c'), {
                    cat: true,
                    filter: /^#inc.*mpr.*$/mg, 
                    exclude: /manager|makerom/,
                    header: '#include \"mpr.h\"',
                    title: bit.settings.title + ' Library Source',
                })
                /* Must put matrix first - because they have screwed headers */
                install(['src/ssl/matrixssl.c', 'src/ssl/est.c', 'src/ssl/openssl.c', 'src/ssl/mocana.c', 'src/ssl/ssl.c'], 
                    d.join('src/deps/mpr/mprSsl.c'), {
                    cat: true,
                    title: bit.settings.title + ' SSL Source',
                })
                package(bit.dir.pkg, ['combo', 'flat'])
            ",
        },
    },

    packs: {
        est: {},
        matrixssl: {},
        openssl: {},
        mocana: {},
    },
})
