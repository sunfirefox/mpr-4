#
#   mpr-windows-static.nmake -- Makefile to build Multithreaded Portable Runtime for windows
#

PRODUCT            = mpr
VERSION            = 4.3.2
BUILD_NUMBER       = 0
PROFILE            = static
PA                 = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH               = x64
ENTRY              = _DllMainCRTStartup
!ELSE
ARCH               = x86
ENTRY              = _DllMainCRTStartup@12
!ENDIF

OS                 = windows
CONFIG             = $(OS)-$(ARCH)-$(PROFILE)
LBIN               = $(CONFIG)\bin

BIT_PACK_EST       = 1
BIT_PACK_MATRIXSSL = 0
BIT_PACK_OPENSSL   = 0
BIT_PACK_SSL       = 1

!IF "$(BIT_PACK_EST)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_LIB)" == "1"
BIT_PACK_COMPILER = 1
!ENDIF

!IF "$(BIT_PACK_MATRIXSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_NANOSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_OPENSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_RC)" == "1"
BIT_PACK_WINSDK = 1
!ENDIF


BIT_PACK_COMPILER_PATH    = cl
BIT_PACK_DOXYGEN_PATH     = doxygen
BIT_PACK_DSI_PATH         = dsi
BIT_PACK_EST_PATH         = est
BIT_PACK_LIB_PATH         = lib.exe
BIT_PACK_LINK_PATH        = link
BIT_PACK_MAN_PATH         = man
BIT_PACK_MAN2HTML_PATH    = man2html
BIT_PACK_MATRIXSSL_PATH   = /usr/src/matrixssl
BIT_PACK_MD5_PATH         = md5
BIT_PACK_NANOSSL_PATH     = /usr/src/nanossl
BIT_PACK_OPENSSL_PATH     = /usr/src/openssl
BIT_PACK_RC_PATH          = rc
BIT_PACK_SSL_PATH         = ssl
BIT_PACK_UTEST_PATH       = utest
BIT_PACK_WINSDK_PATH      = winsdk

CC                 = cl
LD                 = link
RC                 = rc
CFLAGS             = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS             = -DBIT_DEBUG -D_REENTRANT -D_MT -DBIT_PACK_EST=$(BIT_PACK_EST) -DBIT_PACK_MATRIXSSL=$(BIT_PACK_MATRIXSSL) -DBIT_PACK_OPENSSL=$(BIT_PACK_OPENSSL) -DBIT_PACK_SSL=$(BIT_PACK_SSL) 
IFLAGS             = -I$(CONFIG)\inc
LDFLAGS            = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS           = -libpath:$(CONFIG)\bin
LIBS               = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX    = C:
BIT_BASE_PREFIX    = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX     = $(BIT_BASE_PREFIX)\Multithreaded Portable Runtime
BIT_VAPP_PREFIX    = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX     = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX     = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX     = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX     = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX     = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX     = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX     = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX   = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX   = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX     = $(BIT_VAPP_PREFIX)\src


!IF "$(BIT_PACK_EST)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libest.lib
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\ca.crt
TARGETS            = $(TARGETS) $(CONFIG)\bin\benchMpr.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\runProgram.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\testMpr.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmprssl.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\manager.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\makerom.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\chargen.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\mpr-windows-static-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\libest.lib" del /Q "$(CONFIG)\bin\libest.lib"
	if exist "$(CONFIG)\bin\ca.crt" del /Q "$(CONFIG)\bin\ca.crt"
	if exist "$(CONFIG)\bin\benchMpr.exe" del /Q "$(CONFIG)\bin\benchMpr.exe"
	if exist "$(CONFIG)\bin\benchMpr.lib" del /Q "$(CONFIG)\bin\benchMpr.lib"
	if exist "$(CONFIG)\bin\benchMpr.pdb" del /Q "$(CONFIG)\bin\benchMpr.pdb"
	if exist "$(CONFIG)\bin\benchMpr.exp" del /Q "$(CONFIG)\bin\benchMpr.exp"
	if exist "$(CONFIG)\bin\runProgram.exe" del /Q "$(CONFIG)\bin\runProgram.exe"
	if exist "$(CONFIG)\bin\runProgram.lib" del /Q "$(CONFIG)\bin\runProgram.lib"
	if exist "$(CONFIG)\bin\runProgram.pdb" del /Q "$(CONFIG)\bin\runProgram.pdb"
	if exist "$(CONFIG)\bin\runProgram.exp" del /Q "$(CONFIG)\bin\runProgram.exp"
	if exist "$(CONFIG)\bin\testMpr.exe" del /Q "$(CONFIG)\bin\testMpr.exe"
	if exist "$(CONFIG)\bin\testMpr.lib" del /Q "$(CONFIG)\bin\testMpr.lib"
	if exist "$(CONFIG)\bin\testMpr.pdb" del /Q "$(CONFIG)\bin\testMpr.pdb"
	if exist "$(CONFIG)\bin\testMpr.exp" del /Q "$(CONFIG)\bin\testMpr.exp"
	if exist "$(CONFIG)\bin\libmpr.lib" del /Q "$(CONFIG)\bin\libmpr.lib"
	if exist "$(CONFIG)\bin\libmprssl.lib" del /Q "$(CONFIG)\bin\libmprssl.lib"
	if exist "$(CONFIG)\bin\manager.exe" del /Q "$(CONFIG)\bin\manager.exe"
	if exist "$(CONFIG)\bin\manager.lib" del /Q "$(CONFIG)\bin\manager.lib"
	if exist "$(CONFIG)\bin\manager.pdb" del /Q "$(CONFIG)\bin\manager.pdb"
	if exist "$(CONFIG)\bin\manager.exp" del /Q "$(CONFIG)\bin\manager.exp"
	if exist "$(CONFIG)\bin\makerom.exe" del /Q "$(CONFIG)\bin\makerom.exe"
	if exist "$(CONFIG)\bin\makerom.lib" del /Q "$(CONFIG)\bin\makerom.lib"
	if exist "$(CONFIG)\bin\makerom.pdb" del /Q "$(CONFIG)\bin\makerom.pdb"
	if exist "$(CONFIG)\bin\makerom.exp" del /Q "$(CONFIG)\bin\makerom.exp"
	if exist "$(CONFIG)\bin\chargen.exe" del /Q "$(CONFIG)\bin\chargen.exe"
	if exist "$(CONFIG)\bin\chargen.lib" del /Q "$(CONFIG)\bin\chargen.lib"
	if exist "$(CONFIG)\bin\chargen.pdb" del /Q "$(CONFIG)\bin\chargen.pdb"
	if exist "$(CONFIG)\bin\chargen.exp" del /Q "$(CONFIG)\bin\chargen.exp"
	if exist "$(CONFIG)\obj\estLib.obj" del /Q "$(CONFIG)\obj\estLib.obj"
	if exist "$(CONFIG)\obj\benchMpr.obj" del /Q "$(CONFIG)\obj\benchMpr.obj"
	if exist "$(CONFIG)\obj\runProgram.obj" del /Q "$(CONFIG)\obj\runProgram.obj"
	if exist "$(CONFIG)\obj\testArgv.obj" del /Q "$(CONFIG)\obj\testArgv.obj"
	if exist "$(CONFIG)\obj\testBuf.obj" del /Q "$(CONFIG)\obj\testBuf.obj"
	if exist "$(CONFIG)\obj\testCmd.obj" del /Q "$(CONFIG)\obj\testCmd.obj"
	if exist "$(CONFIG)\obj\testCond.obj" del /Q "$(CONFIG)\obj\testCond.obj"
	if exist "$(CONFIG)\obj\testEvent.obj" del /Q "$(CONFIG)\obj\testEvent.obj"
	if exist "$(CONFIG)\obj\testFile.obj" del /Q "$(CONFIG)\obj\testFile.obj"
	if exist "$(CONFIG)\obj\testHash.obj" del /Q "$(CONFIG)\obj\testHash.obj"
	if exist "$(CONFIG)\obj\testList.obj" del /Q "$(CONFIG)\obj\testList.obj"
	if exist "$(CONFIG)\obj\testLock.obj" del /Q "$(CONFIG)\obj\testLock.obj"
	if exist "$(CONFIG)\obj\testMem.obj" del /Q "$(CONFIG)\obj\testMem.obj"
	if exist "$(CONFIG)\obj\testMpr.obj" del /Q "$(CONFIG)\obj\testMpr.obj"
	if exist "$(CONFIG)\obj\testPath.obj" del /Q "$(CONFIG)\obj\testPath.obj"
	if exist "$(CONFIG)\obj\testSocket.obj" del /Q "$(CONFIG)\obj\testSocket.obj"
	if exist "$(CONFIG)\obj\testSprintf.obj" del /Q "$(CONFIG)\obj\testSprintf.obj"
	if exist "$(CONFIG)\obj\testThread.obj" del /Q "$(CONFIG)\obj\testThread.obj"
	if exist "$(CONFIG)\obj\testTime.obj" del /Q "$(CONFIG)\obj\testTime.obj"
	if exist "$(CONFIG)\obj\testUnicode.obj" del /Q "$(CONFIG)\obj\testUnicode.obj"
	if exist "$(CONFIG)\obj\async.obj" del /Q "$(CONFIG)\obj\async.obj"
	if exist "$(CONFIG)\obj\atomic.obj" del /Q "$(CONFIG)\obj\atomic.obj"
	if exist "$(CONFIG)\obj\buf.obj" del /Q "$(CONFIG)\obj\buf.obj"
	if exist "$(CONFIG)\obj\cache.obj" del /Q "$(CONFIG)\obj\cache.obj"
	if exist "$(CONFIG)\obj\cmd.obj" del /Q "$(CONFIG)\obj\cmd.obj"
	if exist "$(CONFIG)\obj\cond.obj" del /Q "$(CONFIG)\obj\cond.obj"
	if exist "$(CONFIG)\obj\crypt.obj" del /Q "$(CONFIG)\obj\crypt.obj"
	if exist "$(CONFIG)\obj\disk.obj" del /Q "$(CONFIG)\obj\disk.obj"
	if exist "$(CONFIG)\obj\dispatcher.obj" del /Q "$(CONFIG)\obj\dispatcher.obj"
	if exist "$(CONFIG)\obj\encode.obj" del /Q "$(CONFIG)\obj\encode.obj"
	if exist "$(CONFIG)\obj\epoll.obj" del /Q "$(CONFIG)\obj\epoll.obj"
	if exist "$(CONFIG)\obj\event.obj" del /Q "$(CONFIG)\obj\event.obj"
	if exist "$(CONFIG)\obj\file.obj" del /Q "$(CONFIG)\obj\file.obj"
	if exist "$(CONFIG)\obj\fs.obj" del /Q "$(CONFIG)\obj\fs.obj"
	if exist "$(CONFIG)\obj\hash.obj" del /Q "$(CONFIG)\obj\hash.obj"
	if exist "$(CONFIG)\obj\json.obj" del /Q "$(CONFIG)\obj\json.obj"
	if exist "$(CONFIG)\obj\kqueue.obj" del /Q "$(CONFIG)\obj\kqueue.obj"
	if exist "$(CONFIG)\obj\list.obj" del /Q "$(CONFIG)\obj\list.obj"
	if exist "$(CONFIG)\obj\lock.obj" del /Q "$(CONFIG)\obj\lock.obj"
	if exist "$(CONFIG)\obj\log.obj" del /Q "$(CONFIG)\obj\log.obj"
	if exist "$(CONFIG)\obj\mem.obj" del /Q "$(CONFIG)\obj\mem.obj"
	if exist "$(CONFIG)\obj\mime.obj" del /Q "$(CONFIG)\obj\mime.obj"
	if exist "$(CONFIG)\obj\mixed.obj" del /Q "$(CONFIG)\obj\mixed.obj"
	if exist "$(CONFIG)\obj\module.obj" del /Q "$(CONFIG)\obj\module.obj"
	if exist "$(CONFIG)\obj\mpr.obj" del /Q "$(CONFIG)\obj\mpr.obj"
	if exist "$(CONFIG)\obj\path.obj" del /Q "$(CONFIG)\obj\path.obj"
	if exist "$(CONFIG)\obj\poll.obj" del /Q "$(CONFIG)\obj\poll.obj"
	if exist "$(CONFIG)\obj\posix.obj" del /Q "$(CONFIG)\obj\posix.obj"
	if exist "$(CONFIG)\obj\printf.obj" del /Q "$(CONFIG)\obj\printf.obj"
	if exist "$(CONFIG)\obj\rom.obj" del /Q "$(CONFIG)\obj\rom.obj"
	if exist "$(CONFIG)\obj\select.obj" del /Q "$(CONFIG)\obj\select.obj"
	if exist "$(CONFIG)\obj\signal.obj" del /Q "$(CONFIG)\obj\signal.obj"
	if exist "$(CONFIG)\obj\socket.obj" del /Q "$(CONFIG)\obj\socket.obj"
	if exist "$(CONFIG)\obj\string.obj" del /Q "$(CONFIG)\obj\string.obj"
	if exist "$(CONFIG)\obj\test.obj" del /Q "$(CONFIG)\obj\test.obj"
	if exist "$(CONFIG)\obj\thread.obj" del /Q "$(CONFIG)\obj\thread.obj"
	if exist "$(CONFIG)\obj\time.obj" del /Q "$(CONFIG)\obj\time.obj"
	if exist "$(CONFIG)\obj\vxworks.obj" del /Q "$(CONFIG)\obj\vxworks.obj"
	if exist "$(CONFIG)\obj\wait.obj" del /Q "$(CONFIG)\obj\wait.obj"
	if exist "$(CONFIG)\obj\wide.obj" del /Q "$(CONFIG)\obj\wide.obj"
	if exist "$(CONFIG)\obj\win.obj" del /Q "$(CONFIG)\obj\win.obj"
	if exist "$(CONFIG)\obj\wince.obj" del /Q "$(CONFIG)\obj\wince.obj"
	if exist "$(CONFIG)\obj\xml.obj" del /Q "$(CONFIG)\obj\xml.obj"
	if exist "$(CONFIG)\obj\est.obj" del /Q "$(CONFIG)\obj\est.obj"
	if exist "$(CONFIG)\obj\matrixssl.obj" del /Q "$(CONFIG)\obj\matrixssl.obj"
	if exist "$(CONFIG)\obj\nanossl.obj" del /Q "$(CONFIG)\obj\nanossl.obj"
	if exist "$(CONFIG)\obj\openssl.obj" del /Q "$(CONFIG)\obj\openssl.obj"
	if exist "$(CONFIG)\obj\ssl.obj" del /Q "$(CONFIG)\obj\ssl.obj"
	if exist "$(CONFIG)\obj\manager.obj" del /Q "$(CONFIG)\obj\manager.obj"
	if exist "$(CONFIG)\obj\makerom.obj" del /Q "$(CONFIG)\obj\makerom.obj"
	if exist "$(CONFIG)\obj\charGen.obj" del /Q "$(CONFIG)\obj\charGen.obj"



#
#   version
#
version: $(DEPS_1)
	@echo 4.3.2-0

#
#   est.h
#
$(CONFIG)\inc\est.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/est.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_3)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   bitos.h
#
DEPS_4 = $(DEPS_4) $(CONFIG)\inc\bit.h

$(CONFIG)\inc\bitos.h: $(DEPS_4)
	@echo '      [Copy] $(CONFIG)/inc/bitos.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

#
#   estLib.obj
#
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bit.h
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\est.h
DEPS_5 = $(DEPS_5) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\estLib.obj: \
    src\deps\est\estLib.c $(DEPS_5)
	@echo '   [Compile] $(CONFIG)/obj/estLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\deps\est\estLib.c

!IF "$(BIT_PACK_EST)" == "1"
#
#   libest
#
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\est.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bit.h
DEPS_6 = $(DEPS_6) $(CONFIG)\inc\bitos.h
DEPS_6 = $(DEPS_6) $(CONFIG)\obj\estLib.obj

$(CONFIG)\bin\libest.lib: $(DEPS_6)
	@echo '      [Link] $(CONFIG)/bin/libest.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libest.lib $(CONFIG)\obj\estLib.obj
!ENDIF

#
#   ca-crt
#
DEPS_7 = $(DEPS_7) src\deps\est\ca.crt

$(CONFIG)\bin\ca.crt: $(DEPS_7)
	@echo '      [Copy] $(CONFIG)/bin/ca.crt'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

#
#   mpr.h
#
$(CONFIG)\inc\mpr.h: $(DEPS_8)
	@echo '      [Copy] $(CONFIG)/inc/mpr.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\mpr.h $(CONFIG)\inc\mpr.h

#
#   async.obj
#
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\bit.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\mpr.h
DEPS_9 = $(DEPS_9) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\async.obj: \
    src\async.c $(DEPS_9)
	@echo '   [Compile] $(CONFIG)/obj/async.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\async.obj -Fd$(CONFIG)\obj\async.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\async.c

#
#   atomic.obj
#
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bit.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\atomic.obj: \
    src\atomic.c $(DEPS_10)
	@echo '   [Compile] $(CONFIG)/obj/atomic.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\atomic.obj -Fd$(CONFIG)\obj\atomic.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\atomic.c

#
#   buf.obj
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\buf.obj: \
    src\buf.c $(DEPS_11)
	@echo '   [Compile] $(CONFIG)/obj/buf.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\buf.obj -Fd$(CONFIG)\obj\buf.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\buf.c

#
#   cache.obj
#
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bit.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\cache.obj: \
    src\cache.c $(DEPS_12)
	@echo '   [Compile] $(CONFIG)/obj/cache.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\cache.obj -Fd$(CONFIG)\obj\cache.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\cache.c

#
#   cmd.obj
#
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bit.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\cmd.obj: \
    src\cmd.c $(DEPS_13)
	@echo '   [Compile] $(CONFIG)/obj/cmd.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\cmd.obj -Fd$(CONFIG)\obj\cmd.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\cmd.c

#
#   cond.obj
#
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\bit.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\cond.obj: \
    src\cond.c $(DEPS_14)
	@echo '   [Compile] $(CONFIG)/obj/cond.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\cond.obj -Fd$(CONFIG)\obj\cond.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\cond.c

#
#   crypt.obj
#
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bit.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\crypt.obj: \
    src\crypt.c $(DEPS_15)
	@echo '   [Compile] $(CONFIG)/obj/crypt.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\crypt.obj -Fd$(CONFIG)\obj\crypt.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\crypt.c

#
#   disk.obj
#
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\bit.h
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\disk.obj: \
    src\disk.c $(DEPS_16)
	@echo '   [Compile] $(CONFIG)/obj/disk.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\disk.obj -Fd$(CONFIG)\obj\disk.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\disk.c

#
#   dispatcher.obj
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\dispatcher.obj: \
    src\dispatcher.c $(DEPS_17)
	@echo '   [Compile] $(CONFIG)/obj/dispatcher.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\dispatcher.obj -Fd$(CONFIG)\obj\dispatcher.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\dispatcher.c

#
#   encode.obj
#
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\bit.h
DEPS_18 = $(DEPS_18) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\encode.obj: \
    src\encode.c $(DEPS_18)
	@echo '   [Compile] $(CONFIG)/obj/encode.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\encode.obj -Fd$(CONFIG)\obj\encode.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\encode.c

#
#   epoll.obj
#
DEPS_19 = $(DEPS_19) $(CONFIG)\inc\bit.h
DEPS_19 = $(DEPS_19) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\epoll.obj: \
    src\epoll.c $(DEPS_19)
	@echo '   [Compile] $(CONFIG)/obj/epoll.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\epoll.obj -Fd$(CONFIG)\obj\epoll.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\epoll.c

#
#   event.obj
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bit.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\event.obj: \
    src\event.c $(DEPS_20)
	@echo '   [Compile] $(CONFIG)/obj/event.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\event.obj -Fd$(CONFIG)\obj\event.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\event.c

#
#   file.obj
#
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\bit.h
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\file.obj: \
    src\file.c $(DEPS_21)
	@echo '   [Compile] $(CONFIG)/obj/file.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\file.obj -Fd$(CONFIG)\obj\file.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\file.c

#
#   fs.obj
#
DEPS_22 = $(DEPS_22) $(CONFIG)\inc\bit.h
DEPS_22 = $(DEPS_22) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\fs.obj: \
    src\fs.c $(DEPS_22)
	@echo '   [Compile] $(CONFIG)/obj/fs.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\fs.obj -Fd$(CONFIG)\obj\fs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\fs.c

#
#   hash.obj
#
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\bit.h
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\hash.obj: \
    src\hash.c $(DEPS_23)
	@echo '   [Compile] $(CONFIG)/obj/hash.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\hash.obj -Fd$(CONFIG)\obj\hash.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\hash.c

#
#   json.obj
#
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\bit.h
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\json.obj: \
    src\json.c $(DEPS_24)
	@echo '   [Compile] $(CONFIG)/obj/json.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\json.obj -Fd$(CONFIG)\obj\json.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\json.c

#
#   kqueue.obj
#
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bit.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\kqueue.obj: \
    src\kqueue.c $(DEPS_25)
	@echo '   [Compile] $(CONFIG)/obj/kqueue.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\kqueue.obj -Fd$(CONFIG)\obj\kqueue.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\kqueue.c

#
#   list.obj
#
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bit.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\list.obj: \
    src\list.c $(DEPS_26)
	@echo '   [Compile] $(CONFIG)/obj/list.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\list.obj -Fd$(CONFIG)\obj\list.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\list.c

#
#   lock.obj
#
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\bit.h
DEPS_27 = $(DEPS_27) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\lock.obj: \
    src\lock.c $(DEPS_27)
	@echo '   [Compile] $(CONFIG)/obj/lock.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\lock.obj -Fd$(CONFIG)\obj\lock.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\lock.c

#
#   log.obj
#
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\bit.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\log.obj: \
    src\log.c $(DEPS_28)
	@echo '   [Compile] $(CONFIG)/obj/log.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\log.obj -Fd$(CONFIG)\obj\log.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\log.c

#
#   mem.obj
#
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\bit.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\mem.obj: \
    src\mem.c $(DEPS_29)
	@echo '   [Compile] $(CONFIG)/obj/mem.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mem.obj -Fd$(CONFIG)\obj\mem.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mem.c

#
#   mime.obj
#
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\bit.h
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\mime.obj: \
    src\mime.c $(DEPS_30)
	@echo '   [Compile] $(CONFIG)/obj/mime.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mime.obj -Fd$(CONFIG)\obj\mime.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mime.c

#
#   mixed.obj
#
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bit.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\mixed.obj: \
    src\mixed.c $(DEPS_31)
	@echo '   [Compile] $(CONFIG)/obj/mixed.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mixed.obj -Fd$(CONFIG)\obj\mixed.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mixed.c

#
#   module.obj
#
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\bit.h
DEPS_32 = $(DEPS_32) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\module.obj: \
    src\module.c $(DEPS_32)
	@echo '   [Compile] $(CONFIG)/obj/module.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\module.obj -Fd$(CONFIG)\obj\module.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\module.c

#
#   mpr.obj
#
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\bit.h
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\mpr.obj: \
    src\mpr.c $(DEPS_33)
	@echo '   [Compile] $(CONFIG)/obj/mpr.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mpr.obj -Fd$(CONFIG)\obj\mpr.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\mpr.c

#
#   path.obj
#
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\bit.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\path.obj: \
    src\path.c $(DEPS_34)
	@echo '   [Compile] $(CONFIG)/obj/path.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\path.obj -Fd$(CONFIG)\obj\path.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\path.c

#
#   poll.obj
#
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\bit.h
DEPS_35 = $(DEPS_35) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\poll.obj: \
    src\poll.c $(DEPS_35)
	@echo '   [Compile] $(CONFIG)/obj/poll.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\poll.obj -Fd$(CONFIG)\obj\poll.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\poll.c

#
#   posix.obj
#
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\bit.h
DEPS_36 = $(DEPS_36) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\posix.obj: \
    src\posix.c $(DEPS_36)
	@echo '   [Compile] $(CONFIG)/obj/posix.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\posix.obj -Fd$(CONFIG)\obj\posix.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\posix.c

#
#   printf.obj
#
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\bit.h
DEPS_37 = $(DEPS_37) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\printf.obj: \
    src\printf.c $(DEPS_37)
	@echo '   [Compile] $(CONFIG)/obj/printf.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\printf.obj -Fd$(CONFIG)\obj\printf.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\printf.c

#
#   rom.obj
#
DEPS_38 = $(DEPS_38) $(CONFIG)\inc\bit.h
DEPS_38 = $(DEPS_38) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\rom.obj: \
    src\rom.c $(DEPS_38)
	@echo '   [Compile] $(CONFIG)/obj/rom.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\rom.obj -Fd$(CONFIG)\obj\rom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\rom.c

#
#   select.obj
#
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\bit.h
DEPS_39 = $(DEPS_39) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\select.obj: \
    src\select.c $(DEPS_39)
	@echo '   [Compile] $(CONFIG)/obj/select.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\select.obj -Fd$(CONFIG)\obj\select.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\select.c

#
#   signal.obj
#
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\bit.h
DEPS_40 = $(DEPS_40) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\signal.obj: \
    src\signal.c $(DEPS_40)
	@echo '   [Compile] $(CONFIG)/obj/signal.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\signal.obj -Fd$(CONFIG)\obj\signal.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\signal.c

#
#   socket.obj
#
DEPS_41 = $(DEPS_41) $(CONFIG)\inc\bit.h
DEPS_41 = $(DEPS_41) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\socket.obj: \
    src\socket.c $(DEPS_41)
	@echo '   [Compile] $(CONFIG)/obj/socket.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\socket.obj -Fd$(CONFIG)\obj\socket.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\socket.c

#
#   string.obj
#
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\bit.h
DEPS_42 = $(DEPS_42) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\string.obj: \
    src\string.c $(DEPS_42)
	@echo '   [Compile] $(CONFIG)/obj/string.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\string.obj -Fd$(CONFIG)\obj\string.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\string.c

#
#   test.obj
#
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\bit.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\test.obj: \
    src\test.c $(DEPS_43)
	@echo '   [Compile] $(CONFIG)/obj/test.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\test.obj -Fd$(CONFIG)\obj\test.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\test.c

#
#   thread.obj
#
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\bit.h
DEPS_44 = $(DEPS_44) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\thread.obj: \
    src\thread.c $(DEPS_44)
	@echo '   [Compile] $(CONFIG)/obj/thread.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\thread.obj -Fd$(CONFIG)\obj\thread.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\thread.c

#
#   time.obj
#
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\bit.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\time.obj: \
    src\time.c $(DEPS_45)
	@echo '   [Compile] $(CONFIG)/obj/time.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\time.obj -Fd$(CONFIG)\obj\time.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\time.c

#
#   vxworks.obj
#
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\bit.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\vxworks.obj: \
    src\vxworks.c $(DEPS_46)
	@echo '   [Compile] $(CONFIG)/obj/vxworks.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\vxworks.obj -Fd$(CONFIG)\obj\vxworks.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\vxworks.c

#
#   wait.obj
#
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\bit.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\wait.obj: \
    src\wait.c $(DEPS_47)
	@echo '   [Compile] $(CONFIG)/obj/wait.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\wait.obj -Fd$(CONFIG)\obj\wait.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\wait.c

#
#   wide.obj
#
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\bit.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\wide.obj: \
    src\wide.c $(DEPS_48)
	@echo '   [Compile] $(CONFIG)/obj/wide.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\wide.obj -Fd$(CONFIG)\obj\wide.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\wide.c

#
#   win.obj
#
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\bit.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\win.obj: \
    src\win.c $(DEPS_49)
	@echo '   [Compile] $(CONFIG)/obj/win.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\win.obj -Fd$(CONFIG)\obj\win.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\win.c

#
#   wince.obj
#
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\bit.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\wince.obj: \
    src\wince.c $(DEPS_50)
	@echo '   [Compile] $(CONFIG)/obj/wince.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\wince.obj -Fd$(CONFIG)\obj\wince.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\wince.c

#
#   xml.obj
#
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\bit.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\xml.obj: \
    src\xml.c $(DEPS_51)
	@echo '   [Compile] $(CONFIG)/obj/xml.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\xml.obj -Fd$(CONFIG)\obj\xml.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\xml.c

#
#   libmpr
#
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bit.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bitos.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\mpr.h
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\async.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\atomic.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\buf.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\cache.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\cmd.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\cond.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\crypt.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\disk.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\dispatcher.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\encode.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\epoll.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\event.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\file.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\fs.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\hash.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\json.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\kqueue.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\list.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\lock.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\log.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mem.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mime.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mixed.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\module.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\mpr.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\path.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\poll.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\posix.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\printf.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\rom.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\select.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\signal.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\socket.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\string.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\test.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\thread.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\time.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\vxworks.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\wait.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\wide.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\win.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\wince.obj
DEPS_52 = $(DEPS_52) $(CONFIG)\obj\xml.obj

$(CONFIG)\bin\libmpr.lib: $(DEPS_52)
	@echo '      [Link] $(CONFIG)/bin/libmpr.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmpr.lib $(CONFIG)\obj\async.obj $(CONFIG)\obj\atomic.obj $(CONFIG)\obj\buf.obj $(CONFIG)\obj\cache.obj $(CONFIG)\obj\cmd.obj $(CONFIG)\obj\cond.obj $(CONFIG)\obj\crypt.obj $(CONFIG)\obj\disk.obj $(CONFIG)\obj\dispatcher.obj $(CONFIG)\obj\encode.obj $(CONFIG)\obj\epoll.obj $(CONFIG)\obj\event.obj $(CONFIG)\obj\file.obj $(CONFIG)\obj\fs.obj $(CONFIG)\obj\hash.obj $(CONFIG)\obj\json.obj $(CONFIG)\obj\kqueue.obj $(CONFIG)\obj\list.obj $(CONFIG)\obj\lock.obj $(CONFIG)\obj\log.obj $(CONFIG)\obj\mem.obj $(CONFIG)\obj\mime.obj $(CONFIG)\obj\mixed.obj $(CONFIG)\obj\module.obj $(CONFIG)\obj\mpr.obj $(CONFIG)\obj\path.obj $(CONFIG)\obj\poll.obj $(CONFIG)\obj\posix.obj $(CONFIG)\obj\printf.obj $(CONFIG)\obj\rom.obj $(CONFIG)\obj\select.obj $(CONFIG)\obj\signal.obj $(CONFIG)\obj\socket.obj $(CONFIG)\obj\string.obj $(CONFIG)\obj\test.obj $(CONFIG)\obj\thread.obj $(CONFIG)\obj\time.obj $(CONFIG)\obj\vxworks.obj $(CONFIG)\obj\wait.obj $(CONFIG)\obj\wide.obj $(CONFIG)\obj\win.obj $(CONFIG)\obj\wince.obj $(CONFIG)\obj\xml.obj

#
#   benchMpr.obj
#
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\bit.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\benchMpr.obj: \
    test\benchMpr.c $(DEPS_53)
	@echo '   [Compile] $(CONFIG)/obj/benchMpr.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\benchMpr.obj -Fd$(CONFIG)\obj\benchMpr.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\benchMpr.c

#
#   benchMpr
#
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bit.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bitos.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mpr.h
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\async.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\atomic.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\buf.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\cache.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\cmd.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\cond.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\crypt.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\disk.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\dispatcher.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\encode.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\epoll.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\event.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\file.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\fs.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\hash.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\json.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\kqueue.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\list.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\lock.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\log.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mem.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mime.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mixed.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\module.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\mpr.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\path.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\poll.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\posix.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\printf.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\rom.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\select.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\signal.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\socket.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\string.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\test.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\thread.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\time.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\vxworks.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\wait.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\wide.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\win.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\wince.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\xml.obj
DEPS_54 = $(DEPS_54) $(CONFIG)\bin\libmpr.lib
DEPS_54 = $(DEPS_54) $(CONFIG)\obj\benchMpr.obj

LIBS_54 = $(LIBS_54) libmpr.lib

$(CONFIG)\bin\benchMpr.exe: $(DEPS_54)
	@echo '      [Link] $(CONFIG)/bin/benchMpr.exe'
	"$(LD)" -out:$(CONFIG)\bin\benchMpr.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\benchMpr.obj $(LIBPATHS_54) $(LIBS_54) $(LIBS_54) $(LIBS) 

#
#   runProgram.obj
#
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\runProgram.obj: \
    test\runProgram.c $(DEPS_55)
	@echo '   [Compile] $(CONFIG)/obj/runProgram.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\runProgram.obj -Fd$(CONFIG)\obj\runProgram.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\runProgram.c

#
#   runProgram
#
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\bit.h
DEPS_56 = $(DEPS_56) $(CONFIG)\obj\runProgram.obj

$(CONFIG)\bin\runProgram.exe: $(DEPS_56)
	@echo '      [Link] $(CONFIG)/bin/runProgram.exe'
	"$(LD)" -out:$(CONFIG)\bin\runProgram.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\runProgram.obj $(LIBS) 

#
#   testArgv.obj
#
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\bit.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testArgv.obj: \
    test\testArgv.c $(DEPS_57)
	@echo '   [Compile] $(CONFIG)/obj/testArgv.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testArgv.obj -Fd$(CONFIG)\obj\testArgv.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testArgv.c

#
#   testBuf.obj
#
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\bit.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testBuf.obj: \
    test\testBuf.c $(DEPS_58)
	@echo '   [Compile] $(CONFIG)/obj/testBuf.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testBuf.obj -Fd$(CONFIG)\obj\testBuf.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testBuf.c

#
#   testCmd.obj
#
DEPS_59 = $(DEPS_59) $(CONFIG)\inc\bit.h
DEPS_59 = $(DEPS_59) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testCmd.obj: \
    test\testCmd.c $(DEPS_59)
	@echo '   [Compile] $(CONFIG)/obj/testCmd.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testCmd.obj -Fd$(CONFIG)\obj\testCmd.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testCmd.c

#
#   testCond.obj
#
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\bit.h
DEPS_60 = $(DEPS_60) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testCond.obj: \
    test\testCond.c $(DEPS_60)
	@echo '   [Compile] $(CONFIG)/obj/testCond.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testCond.obj -Fd$(CONFIG)\obj\testCond.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testCond.c

#
#   testEvent.obj
#
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\bit.h
DEPS_61 = $(DEPS_61) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testEvent.obj: \
    test\testEvent.c $(DEPS_61)
	@echo '   [Compile] $(CONFIG)/obj/testEvent.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testEvent.obj -Fd$(CONFIG)\obj\testEvent.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testEvent.c

#
#   testFile.obj
#
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\bit.h
DEPS_62 = $(DEPS_62) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testFile.obj: \
    test\testFile.c $(DEPS_62)
	@echo '   [Compile] $(CONFIG)/obj/testFile.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testFile.obj -Fd$(CONFIG)\obj\testFile.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testFile.c

#
#   testHash.obj
#
DEPS_63 = $(DEPS_63) $(CONFIG)\inc\bit.h
DEPS_63 = $(DEPS_63) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testHash.obj: \
    test\testHash.c $(DEPS_63)
	@echo '   [Compile] $(CONFIG)/obj/testHash.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testHash.obj -Fd$(CONFIG)\obj\testHash.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testHash.c

#
#   testList.obj
#
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\bit.h
DEPS_64 = $(DEPS_64) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testList.obj: \
    test\testList.c $(DEPS_64)
	@echo '   [Compile] $(CONFIG)/obj/testList.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testList.obj -Fd$(CONFIG)\obj\testList.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testList.c

#
#   testLock.obj
#
DEPS_65 = $(DEPS_65) $(CONFIG)\inc\bit.h
DEPS_65 = $(DEPS_65) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testLock.obj: \
    test\testLock.c $(DEPS_65)
	@echo '   [Compile] $(CONFIG)/obj/testLock.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testLock.obj -Fd$(CONFIG)\obj\testLock.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testLock.c

#
#   testMem.obj
#
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\bit.h
DEPS_66 = $(DEPS_66) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testMem.obj: \
    test\testMem.c $(DEPS_66)
	@echo '   [Compile] $(CONFIG)/obj/testMem.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testMem.obj -Fd$(CONFIG)\obj\testMem.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testMem.c

#
#   testMpr.obj
#
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\bit.h
DEPS_67 = $(DEPS_67) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testMpr.obj: \
    test\testMpr.c $(DEPS_67)
	@echo '   [Compile] $(CONFIG)/obj/testMpr.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testMpr.obj -Fd$(CONFIG)\obj\testMpr.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testMpr.c

#
#   testPath.obj
#
DEPS_68 = $(DEPS_68) $(CONFIG)\inc\bit.h
DEPS_68 = $(DEPS_68) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testPath.obj: \
    test\testPath.c $(DEPS_68)
	@echo '   [Compile] $(CONFIG)/obj/testPath.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testPath.obj -Fd$(CONFIG)\obj\testPath.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testPath.c

#
#   testSocket.obj
#
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\bit.h
DEPS_69 = $(DEPS_69) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testSocket.obj: \
    test\testSocket.c $(DEPS_69)
	@echo '   [Compile] $(CONFIG)/obj/testSocket.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testSocket.obj -Fd$(CONFIG)\obj\testSocket.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testSocket.c

#
#   testSprintf.obj
#
DEPS_70 = $(DEPS_70) $(CONFIG)\inc\bit.h
DEPS_70 = $(DEPS_70) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testSprintf.obj: \
    test\testSprintf.c $(DEPS_70)
	@echo '   [Compile] $(CONFIG)/obj/testSprintf.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testSprintf.obj -Fd$(CONFIG)\obj\testSprintf.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testSprintf.c

#
#   testThread.obj
#
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\bit.h
DEPS_71 = $(DEPS_71) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testThread.obj: \
    test\testThread.c $(DEPS_71)
	@echo '   [Compile] $(CONFIG)/obj/testThread.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testThread.obj -Fd$(CONFIG)\obj\testThread.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testThread.c

#
#   testTime.obj
#
DEPS_72 = $(DEPS_72) $(CONFIG)\inc\bit.h
DEPS_72 = $(DEPS_72) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testTime.obj: \
    test\testTime.c $(DEPS_72)
	@echo '   [Compile] $(CONFIG)/obj/testTime.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testTime.obj -Fd$(CONFIG)\obj\testTime.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testTime.c

#
#   testUnicode.obj
#
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\bit.h
DEPS_73 = $(DEPS_73) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\testUnicode.obj: \
    test\testUnicode.c $(DEPS_73)
	@echo '   [Compile] $(CONFIG)/obj/testUnicode.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\testUnicode.obj -Fd$(CONFIG)\obj\testUnicode.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) test\testUnicode.c

#
#   testMpr
#
DEPS_74 = $(DEPS_74) $(CONFIG)\inc\bit.h
DEPS_74 = $(DEPS_74) $(CONFIG)\inc\bitos.h
DEPS_74 = $(DEPS_74) $(CONFIG)\inc\mpr.h
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\async.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\atomic.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\buf.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\cache.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\cmd.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\cond.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\crypt.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\disk.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\dispatcher.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\encode.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\epoll.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\event.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\file.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\fs.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\hash.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\json.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\kqueue.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\list.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\lock.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\log.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\mem.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\mime.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\mixed.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\module.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\mpr.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\path.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\poll.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\posix.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\printf.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\rom.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\select.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\signal.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\socket.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\string.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\test.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\thread.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\time.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\vxworks.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\wait.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\wide.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\win.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\wince.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\xml.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\bin\libmpr.lib
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\runProgram.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\bin\runProgram.exe
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testArgv.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testBuf.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testCmd.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testCond.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testEvent.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testFile.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testHash.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testList.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testLock.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testMem.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testMpr.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testPath.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testSocket.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testSprintf.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testThread.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testTime.obj
DEPS_74 = $(DEPS_74) $(CONFIG)\obj\testUnicode.obj

LIBS_74 = $(LIBS_74) libmpr.lib

$(CONFIG)\bin\testMpr.exe: $(DEPS_74)
	@echo '      [Link] $(CONFIG)/bin/testMpr.exe'
	"$(LD)" -out:$(CONFIG)\bin\testMpr.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\testArgv.obj $(CONFIG)\obj\testBuf.obj $(CONFIG)\obj\testCmd.obj $(CONFIG)\obj\testCond.obj $(CONFIG)\obj\testEvent.obj $(CONFIG)\obj\testFile.obj $(CONFIG)\obj\testHash.obj $(CONFIG)\obj\testList.obj $(CONFIG)\obj\testLock.obj $(CONFIG)\obj\testMem.obj $(CONFIG)\obj\testMpr.obj $(CONFIG)\obj\testPath.obj $(CONFIG)\obj\testSocket.obj $(CONFIG)\obj\testSprintf.obj $(CONFIG)\obj\testThread.obj $(CONFIG)\obj\testTime.obj $(CONFIG)\obj\testUnicode.obj $(LIBPATHS_74) $(LIBS_74) $(LIBS_74) $(LIBS) 

#
#   est.obj
#
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\bit.h
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\mpr.h
DEPS_75 = $(DEPS_75) $(CONFIG)\inc\est.h

$(CONFIG)\obj\est.obj: \
    src\ssl\est.c $(DEPS_75)
	@echo '   [Compile] $(CONFIG)/obj/est.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\est.obj -Fd$(CONFIG)\obj\est.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -I$(BIT_PACK_MATRIXSSL_PATH) -I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl -I$(BIT_PACK_NANOSSL_PATH)\src -I$(BIT_PACK_OPENSSL_PATH)\include src\ssl\est.c

#
#   matrixssl.obj
#
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\bit.h
DEPS_76 = $(DEPS_76) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\matrixssl.obj: \
    src\ssl\matrixssl.c $(DEPS_76)
	@echo '   [Compile] $(CONFIG)/obj/matrixssl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\matrixssl.obj -Fd$(CONFIG)\obj\matrixssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -I$(BIT_PACK_MATRIXSSL_PATH) -I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl -I$(BIT_PACK_NANOSSL_PATH)\src -I$(BIT_PACK_OPENSSL_PATH)\include src\ssl\matrixssl.c

#
#   nanossl.obj
#
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\bit.h
DEPS_77 = $(DEPS_77) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\nanossl.obj: \
    src\ssl\nanossl.c $(DEPS_77)
	@echo '   [Compile] $(CONFIG)/obj/nanossl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\nanossl.obj -Fd$(CONFIG)\obj\nanossl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -I$(BIT_PACK_MATRIXSSL_PATH) -I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl -I$(BIT_PACK_NANOSSL_PATH)\src -I$(BIT_PACK_OPENSSL_PATH)\include src\ssl\nanossl.c

#
#   openssl.obj
#
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\bit.h
DEPS_78 = $(DEPS_78) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\openssl.obj: \
    src\ssl\openssl.c $(DEPS_78)
	@echo '   [Compile] $(CONFIG)/obj/openssl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\openssl.obj -Fd$(CONFIG)\obj\openssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -I$(BIT_PACK_MATRIXSSL_PATH) -I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl -I$(BIT_PACK_NANOSSL_PATH)\src -I$(BIT_PACK_OPENSSL_PATH)\include src\ssl\openssl.c

#
#   ssl.obj
#
DEPS_79 = $(DEPS_79) $(CONFIG)\inc\bit.h
DEPS_79 = $(DEPS_79) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\ssl.obj: \
    src\ssl\ssl.c $(DEPS_79)
	@echo '   [Compile] $(CONFIG)/obj/ssl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ssl.obj -Fd$(CONFIG)\obj\ssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) -I$(BIT_PACK_MATRIXSSL_PATH) -I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl -I$(BIT_PACK_NANOSSL_PATH)\src -I$(BIT_PACK_OPENSSL_PATH)\include src\ssl\ssl.c

#
#   libmprssl
#
DEPS_80 = $(DEPS_80) $(CONFIG)\inc\bit.h
DEPS_80 = $(DEPS_80) $(CONFIG)\inc\bitos.h
DEPS_80 = $(DEPS_80) $(CONFIG)\inc\mpr.h
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\async.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\atomic.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\buf.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\cache.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\cmd.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\cond.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\crypt.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\disk.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\dispatcher.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\encode.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\epoll.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\event.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\file.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\fs.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\hash.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\json.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\kqueue.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\list.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\lock.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\log.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\mem.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\mime.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\mixed.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\module.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\mpr.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\path.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\poll.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\posix.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\printf.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\rom.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\select.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\signal.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\socket.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\string.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\test.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\thread.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\time.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\vxworks.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\wait.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\wide.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\win.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\wince.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\xml.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\bin\libmpr.lib
DEPS_80 = $(DEPS_80) $(CONFIG)\inc\est.h
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\estLib.obj
!IF "$(BIT_PACK_EST)" == "1"
DEPS_80 = $(DEPS_80) $(CONFIG)\bin\libest.lib
!ENDIF
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\est.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\matrixssl.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\nanossl.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\openssl.obj
DEPS_80 = $(DEPS_80) $(CONFIG)\obj\ssl.obj

$(CONFIG)\bin\libmprssl.lib: $(DEPS_80)
	@echo '      [Link] $(CONFIG)/bin/libmprssl.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmprssl.lib $(CONFIG)\obj\est.obj $(CONFIG)\obj\matrixssl.obj $(CONFIG)\obj\nanossl.obj $(CONFIG)\obj\openssl.obj $(CONFIG)\obj\ssl.obj

#
#   manager.obj
#
DEPS_81 = $(DEPS_81) $(CONFIG)\inc\bit.h
DEPS_81 = $(DEPS_81) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\manager.obj: \
    src\manager.c $(DEPS_81)
	@echo '   [Compile] $(CONFIG)/obj/manager.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\manager.c

#
#   manager
#
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\bit.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\bitos.h
DEPS_82 = $(DEPS_82) $(CONFIG)\inc\mpr.h
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\async.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\atomic.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\buf.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\cache.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\cmd.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\cond.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\crypt.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\disk.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\dispatcher.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\encode.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\epoll.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\event.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\file.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\fs.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\hash.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\json.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\kqueue.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\list.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\lock.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\log.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mem.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mime.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mixed.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\module.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\mpr.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\path.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\poll.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\posix.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\printf.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\rom.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\select.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\signal.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\socket.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\string.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\test.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\thread.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\time.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\vxworks.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\wait.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\wide.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\win.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\wince.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\xml.obj
DEPS_82 = $(DEPS_82) $(CONFIG)\bin\libmpr.lib
DEPS_82 = $(DEPS_82) $(CONFIG)\obj\manager.obj

LIBS_82 = $(LIBS_82) libmpr.lib

$(CONFIG)\bin\manager.exe: $(DEPS_82)
	@echo '      [Link] $(CONFIG)/bin/manager.exe'
	"$(LD)" -out:$(CONFIG)\bin\manager.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\manager.obj $(LIBPATHS_82) $(LIBS_82) $(LIBS_82) $(LIBS) 

#
#   makerom.obj
#
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\bit.h
DEPS_83 = $(DEPS_83) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\makerom.obj: \
    src\utils\makerom.c $(DEPS_83)
	@echo '   [Compile] $(CONFIG)/obj/makerom.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\makerom.c

#
#   makerom
#
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\bit.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\bitos.h
DEPS_84 = $(DEPS_84) $(CONFIG)\inc\mpr.h
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\async.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\atomic.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\buf.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\cache.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\cmd.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\cond.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\crypt.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\disk.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\dispatcher.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\encode.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\epoll.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\event.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\file.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\fs.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\hash.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\json.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\kqueue.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\list.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\lock.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\log.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mem.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mime.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mixed.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\module.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\mpr.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\path.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\poll.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\posix.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\printf.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\rom.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\select.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\signal.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\socket.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\string.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\test.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\thread.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\time.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\vxworks.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\wait.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\wide.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\win.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\wince.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\xml.obj
DEPS_84 = $(DEPS_84) $(CONFIG)\bin\libmpr.lib
DEPS_84 = $(DEPS_84) $(CONFIG)\obj\makerom.obj

LIBS_84 = $(LIBS_84) libmpr.lib

$(CONFIG)\bin\makerom.exe: $(DEPS_84)
	@echo '      [Link] $(CONFIG)/bin/makerom.exe'
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\makerom.obj $(LIBPATHS_84) $(LIBS_84) $(LIBS_84) $(LIBS) 

#
#   charGen.obj
#
DEPS_85 = $(DEPS_85) $(CONFIG)\inc\bit.h
DEPS_85 = $(DEPS_85) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\charGen.obj: \
    src\utils\charGen.c $(DEPS_85)
	@echo '   [Compile] $(CONFIG)/obj/charGen.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\charGen.obj -Fd$(CONFIG)\obj\charGen.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\utils\charGen.c

#
#   chargen
#
DEPS_86 = $(DEPS_86) $(CONFIG)\inc\bit.h
DEPS_86 = $(DEPS_86) $(CONFIG)\inc\bitos.h
DEPS_86 = $(DEPS_86) $(CONFIG)\inc\mpr.h
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\async.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\atomic.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\buf.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\cache.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\cmd.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\cond.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\crypt.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\disk.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\dispatcher.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\encode.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\epoll.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\event.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\file.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\fs.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\hash.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\json.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\kqueue.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\list.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\lock.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\log.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\mem.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\mime.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\mixed.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\module.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\mpr.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\path.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\poll.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\posix.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\printf.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\rom.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\select.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\signal.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\socket.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\string.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\test.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\thread.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\time.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\vxworks.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\wait.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\wide.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\win.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\wince.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\xml.obj
DEPS_86 = $(DEPS_86) $(CONFIG)\bin\libmpr.lib
DEPS_86 = $(DEPS_86) $(CONFIG)\obj\charGen.obj

LIBS_86 = $(LIBS_86) libmpr.lib

$(CONFIG)\bin\chargen.exe: $(DEPS_86)
	@echo '      [Link] $(CONFIG)/bin/chargen.exe'
	"$(LD)" -out:$(CONFIG)\bin\chargen.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(CONFIG)\obj\charGen.obj $(LIBPATHS_86) $(LIBS_86) $(LIBS_86) $(LIBS) 

#
#   stop
#
stop: $(DEPS_87)
#  Omit build script stop

#
#   installBinary
#
installBinary: $(DEPS_88)

#
#   start
#
start: $(DEPS_89)
#  Omit build script start

#
#   install
#
DEPS_90 = $(DEPS_90) stop
DEPS_90 = $(DEPS_90) installBinary
DEPS_90 = $(DEPS_90) start

install: $(DEPS_90)


#
#   uninstall
#
DEPS_91 = $(DEPS_91) stop

uninstall: $(DEPS_91)

